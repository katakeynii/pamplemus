worker_processes 4;

events { worker_connections 1024; }

http {
  # ssl_session_cache   shared:SSL:10m;
  # ssl_session_timeout 30m;

  #See http://blog.argteam.com/coding/hardening-node-js-for-production-part-2-using-nginx-to-avoid-node-js-load
  proxy_cache_path        /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
  proxy_temp_path         /var/tmp;
  include                 mime.types;
  default_type            application/octet-stream;
  sendfile                on;
  keepalive_timeout       65;

  gzip                    on;
  gzip_comp_level         6;
  gzip_vary               on;
  gzip_min_length         1000;
  gzip_proxied            any;
  gzip_types              text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_buffers            16 8k;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;

    # define your domain
    # server_name 178.128.163.134 dd-front.akilee-by-ines.com "";
    server_name _;
    # define the public application root
    # root   /var/www/html/app/dist/Frontend;
    root /var/www/html/;
    index  index.html;
    # Docker CE server name
    # server_name localhost;

    #Docker Toolbox server name
    #server_name 192.168.99.100;

    #server_name codewithdan.com www.codewithdan.com;

    #return  301 https://$server_name$request_uri;
    # access_log /var/www/html/log/nginx.access.log;
    # error_log /var/www/html/log/nginx.error.log;

    error_log /var/www/html/log/nginx.error.log;
    access_log /var/www/html/log/nginx.access.log;

    location / {
      # try_files $uri $uri/;
      #try_files $uri$args $uri$args/ $uri/ /index.html = 404;
      gzip on;
      gzip_static on;

      try_files $uri $uri/ /index.html;
    }

    # deny requests for files that should never be accessed
    location ~ /\. {
      deny all;
    }
    ## All static files will be served directly.
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|svg|gif|jpg|jpeg|png|wmv|avi|mpg|mpeg|mp4|htm|html|js|css|mp3|swf|ico|flv)$ {
      try_files $uri $uri/;
      access_log on;
      expires 7d;

      gzip on;
      gzip_static on;
      ## No need to bleed constant updates. Send the all shebang in one
      ## fell swoop.
      tcp_nodelay off;
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
      proxy_store /var/www/html/cache$uri;
      proxy_store_access user:rw group:rw all:r;
      ## Set the OS file cache.
      open_file_cache max=3000 inactive=120s;
      open_file_cache_valid 45s;
      open_file_cache_min_uses 2;
      open_file_cache_errors off;
    }
    location ~* ^.+\.(rb|log)$ {
      deny all;
    }
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
      try_files $uri $uri/;
      access_log on;
      gzip_static on;
      # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;

      add_header Last-Modified "";
      add_header ETag "";
      break;
    }
  }


}
